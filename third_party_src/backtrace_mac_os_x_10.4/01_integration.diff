diff -U 3 -H -d -r -N -- /home/canita/work/patches/backtrace_mac_os_x_10.4-orig/backtrace.c /home/canita/work/patches/backtrace_mac_os_x_10.4/backtrace.c
--- /home/canita/work/patches/backtrace_mac_os_x_10.4-orig/backtrace.c	2017-01-28 12:36:00.000000000 +0200
+++ /home/canita/work/patches/backtrace_mac_os_x_10.4/backtrace.c	2017-01-28 12:35:56.000000000 +0200
@@ -23,18 +23,30 @@
  * @APPLE_LICENSE_HEADER_END@
  */
 
+
+// NOTE: Do not use CPPDEVTK_ASSERT() because it use StackTrace; use assert() instead
+
+
+#include <cppdevtk/base/execinfo_unx.h>
+#if (!CPPDEVTK_COMPILER_GCC)
+#	error "This file is gcc specific!!!"
+#endif
+#if (!CPPDEVTK_PLATFORM_MACOSX)
+#	error "This file is Mac OS X specific!!!"
+#endif
+
+
+#if (!CPPDEVTK_HAVE_BACKTRACE)
+
 #include <mach/vm_types.h>
 #include <sys/uio.h>
 
-#include <dlfcn.h>
 #include <stdlib.h>
 #include <stdio.h>
 #include <string.h>
 
-#include "stack_logging.h"
-#include "execinfo.h"
 
-int backtrace(void** buffer, int size) {
+CPPDEVTK_BASE_API int backtrace(void** buffer, int size) {
 	extern void _thread_stack_pcs(vm_address_t *buffer, unsigned max, unsigned *nb, unsigned skip);
 	unsigned int num_frames;
 	_thread_stack_pcs((vm_address_t*)buffer, size, &num_frames, 1);
@@ -42,102 +54,4 @@
 	return num_frames;
 }
 
-#if __LP64__
-#define _BACKTRACE_FORMAT "%-4d%-35s 0x%016x %s + %u"
-#define _BACKTRACE_FORMAT_SIZE 82
-#else
-#define _BACKTRACE_FORMAT "%-4d%-35s 0x%08x %s + %u"
-#define _BACKTRACE_FORMAT_SIZE 65
-#endif
-
-
-static int _backtrace_snprintf(char* buf, size_t size, int frame, const void* addr, const Dl_info* info) {
-	char symbuf[19];
-	const char* image = "???";
-	const char* symbol = symbuf;
-
-	if (info->dli_fname) {
-		image = strrchr(info->dli_fname, '/') + 1;
-		if (image == NULL) image = info->dli_fname;
-	}
-	
-	if (info->dli_sname) {
-		symbol = info->dli_sname;
-	} else {
-		snprintf(symbuf, sizeof(symbuf), "0x%x", info->dli_saddr);
-	}
-
-	return snprintf(buf, size,
-			_BACKTRACE_FORMAT,
-			frame,
-			image,
-			addr,
-			symbol,
-			addr - info->dli_saddr) + 1;
-}
-
-char** backtrace_symbols(void* const* buffer, int size) {
-	int i;
-	size_t total_bytes;
-	char** result;
-	char** ptrs;
-	intptr_t strs;
-	Dl_info* info = calloc(size, sizeof (Dl_info));
-	
-	if (info == NULL) return NULL;
-	
-	// Compute the total size for the block that is returned.
-	// The block will contain size number of pointers to the
-	// symbol descriptions.
-
-	total_bytes = sizeof(char*) * size;
-	
-	// Plus each symbol description
-	for (i = 0 ; i < size; ++i) {
-		dladdr(buffer[i], &info[i]);
-		total_bytes += _BACKTRACE_FORMAT_SIZE + 1;
-		if (info[i].dli_sname) total_bytes += strlen(info[i].dli_sname);
-	}
-	
-	result = (char**)malloc(total_bytes);
-	if (result == NULL) {
-		free(info);
-		return NULL;
-	}
-	
-	// Fill in the array of pointers and append the strings for
-	// each symbol description.
-	
-	ptrs = result;
-	strs = ((intptr_t)result) + sizeof(char*) * size;
-	
-	for (i = 0; i < size; ++i) {
-		ptrs[i] = (char*)strs;
-		strs += _backtrace_snprintf((char*)strs, total_bytes, i, buffer[i], &info[i]);
-	}
-	
-	free(info);
-	
-	return result;
-}
-
-void backtrace_symbols_fd(void* const* buffer, int size, int fd) {
-	int i;
-	char buf[BUFSIZ];
-	Dl_info info;
-	struct iovec iov[2];
-
-	iov[0].iov_base = buf;
-
-	iov[1].iov_base = "\n";
-	iov[1].iov_len = 1;
-
-	for (i = 0; i < size; ++i) {
-		memset(&info, 0, sizeof(info));
-		dladdr(buffer[i], &info);
-
-		iov[0].iov_len = _backtrace_snprintf(buf, sizeof(buf), i, buffer[i], &info);
-		
-		writev(fd, iov, 2);
-	}
-}
+#endif	// (!CPPDEVTK_HAVE_BACKTRACE)
diff -U 3 -H -d -r -N -- /home/canita/work/patches/backtrace_mac_os_x_10.4-orig/thread_stack_pcs.c /home/canita/work/patches/backtrace_mac_os_x_10.4/thread_stack_pcs.c
--- /home/canita/work/patches/backtrace_mac_os_x_10.4-orig/thread_stack_pcs.c	2017-01-28 12:36:00.000000000 +0200
+++ /home/canita/work/patches/backtrace_mac_os_x_10.4/thread_stack_pcs.c	2017-01-28 12:35:56.000000000 +0200
@@ -25,6 +25,19 @@
 
 /*	Bertrand from vmutils -> CF -> System */
 
+
+#include <cppdevtk/base/config.hpp>
+#if (!CPPDEVTK_COMPILER_GCC)
+#	error "This file is gcc specific!!!"
+#endif
+#if (!CPPDEVTK_PLATFORM_MACOSX)
+#	error "This file is Mac OS X specific!!!"
+#endif
+
+
+#if (!CPPDEVTK_HAVE_BACKTRACE)
+
+
 #include <pthread.h>
 #include <mach/mach.h>
 #include <mach/vm_statistics.h>
@@ -110,3 +123,6 @@
     // See <rdar://problem/5364825> "stack logging: frames keep getting truncated" for why this is necessary.
     __asm__ volatile("");
 }
+
+
+#endif	// (!CPPDEVTK_HAVE_BACKTRACE)
