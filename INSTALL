1. Prerequisites:
- Qt 5.6.3 msvc2015 and Qt 5.6.1-1 android needed on Windows
- Qt 5.6.3 macosx and Qt 5.9.7 ios needed on Mac OS X
- JDK 8u144 needed on Windows
- JDK 8u144 needed on Mac OS X >= 10.7 and Apple provided JDK 6 on Mac < 10.7
- Android SDK r25.2.5 + NDK r10e needed on Windows


- Ubuntu:
> sudo apt-get install build-essential ubuntu-dev-tools debhelper dpkg-sig apt-file


- Ubuntu Qt 5:
Use ppa:beineri (https://launchpad.net/~beineri)
16.04 (xenial): sudo apt-add-repository ppa:beineri/opt-qt597-xenial
14.04 (trusty): sudo apt-add-repository ppa:beineri/opt-qt597-trusty
12.04 (precise): sudo apt-add-repository ppa:beineri/opt-qt563
> sudo apt-get update
> sudo apt-get install qt-latest qtcreator-latest

18.04 (bionic):
> sudo apt-get install qtbase5-dev libqt5x11extras5-dev qtcreator


- CentOS Qt 5:
Use EPEL repo
> yum install epel-release


- Windows environment variables for Java and Android:
JAVA_HOME C:\Program Files\Java\jdk1.8.0_144
ANDROID_NDK_ROOT C:\android\ndk-r10e
NDK_ROOT %ANDROID_NDK_ROOT%
ANDROID_HOME C:\android\sdk-r25.2.5
ANDROID_SDK_ROOT %ANDROID_HOME%
ANDROID_NDK_PLATFORM android-19

Add to PATH:
%JAVA_HOME%\bin
%JAVA_HOME%\jre\bin\server
%ANDROID_NDK_ROOT%
%ANDROID_HOME%\tools
%ANDROID_HOME%\platform-tools

- On Mac OS X create symlink /Library/Java/Home

- Windows cross-compile (build on 64 for 32) JDK convenience workaround:
Add in common.pri, win32 replace isEmpty(CPPDEVTK_JAVA_HOME) test with:
isEqual(QMAKE_TARGET.arch, "x86_64") {
	CPPDEVTK_JAVA_HOME = "C:/Program Files/Java/jdk1.8.0_144"
}
else {
	CPPDEVTK_JAVA_HOME = "C:/Program Files (x86)/Java/jdk1.8.0_144"
}




2. Update version:
2.1 Search in files cppdevtk/common.pri and cppdevtk/include/cppdevtk/config/product_info.hpp
for CPPDEVTK_VERSION_MAJOR, CPPDEVTK_VERSION_MINOR and CPPDEVTK_VERSION_PATCH
2.2 Search in *.plist for CFBundleShortVersionString and CFBundleVersion
2.3 Modify in AndroidManifest.xml files versionName and versionCode
2.4 Update in Doxyfile PROJECT_NUMBER
2.5 Update Version in cppdevtk.spec and debian changelog

3. (optional) Copy customization files (if needed)

4. Update translations (run cppdevtk/scripts/translate.* (bat/sh))

5. Update documentation (run doxygen ./Doxyfile)


6. Build
6.1 On Windows/Linux/Mac >= 10.7 build from Qt Creator
In Qt Creator:
- make sure to select Release configuration
- add in Build Steps, qmake:
shared (Lnx/Win/Mac/Android):
CONFIG+=release CONFIG+=shared
static (ios):
CONFIG+=release CONFIG+=static
Build then in bld dir:
Linux:
> make install
Windows msvc 2015 cmd prompt:
> nmake install
Mac OS X:
> make -j1 install

Mac OS X deployment:
> cd /Applications/Qt/5.6.3/clang_64/bin
> ./macdeployqt ~/TestApplication/Build/Release/TestApplication.app -always-overwrite -appstore-compliant
Optional to codesign append:
-codesign=<ident>


6.2 Mac OS X 10.4
Qt Creator does not work on Mac OS X 10.4 so use CLI...
Open terminal in cppdevtk

static:
> export PATH=/opt/cososys/third_party/static/bin:$PATH
> qmake ./cppdevtk.pro -r -spec macx-g++ CONFIG+=release CONFIG+=static

shared:
> export PATH=/opt/cososys/third_party/shared/bin:$PATH
> qmake ./cppdevtk.pro -r -spec macx-g++ CONFIG+=release CONFIG+=shared

make
make -j1 install


6.3 On Linux if packaging:
RPM: rpmbuild -ta --sign cppdevtk-1.0.0.tar.bz2
Deb: debuild --no-tgz-check -D -us -uc -B

Verify signature:
- rpm based
> rpm --checksig ./*.rpm

- deb based
Ubuntu 16.04: dpkg-sig --verify ./*.deb
Ubuntu 14.04: dpkg-sig-fixed --verify ./*.deb
